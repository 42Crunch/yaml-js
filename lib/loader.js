// Generated by CoffeeScript 1.3.1
(function() {
  var Composer, Constructor, Parser, Reader, Resolver, Scanner, util;

  util = require('./util');

  Reader = require('./reader').Reader;

  Scanner = require('./scanner').Scanner;

  Parser = require('./parser').Parser;

  Composer = require('./composer').Composer;

  Resolver = require('./resolver').Resolver;

  Constructor = require('./constructor').Constructor;

  this.make_loader = function(Reader, Scanner, Parser, Composer, Resolver, Constructor) {
    return (function() {
      var arg;

      util.extend.apply(util, [_Class.prototype].concat((function() {
        var _i, _len, _results;
        _results = [];
        for (_i = 0, _len = arguments.length; _i < _len; _i++) {
          arg = arguments[_i];
          _results.push(arg.prototype);
        }
        return _results;
      }).apply(this, arguments)));

      function _Class(stream) {
        Reader.call(this, stream);
        Scanner.call(this);
        Parser.call(this);
        Composer.call(this);
        Resolver.call(this);
        Constructor.call(this);
      }

      return _Class;

    }).apply(this, arguments);
  };

  this.Loader = this.make_loader(Reader, Scanner, Parser, Composer, Resolver, Constructor);

}).call(this);
